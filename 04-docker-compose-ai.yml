version: '3.8'

services:
  # =============================================================================
  # CORE INFRASTRUCTURE
  # =============================================================================
  
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/homelab/docker/volumes/traefik:/data
      - /mnt/homelab/configs/traefik:/etc/traefik
    environment:
      - TRAEFIK_LOG_LEVEL=INFO
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.local`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "3000:3000/tcp"
      - "853:853/tcp"
      - "784:784/udp"
    volumes:
      - /mnt/homelab/docker/volumes/adguard/work:/opt/adguardhome/work
      - /mnt/homelab/docker/volumes/adguard/conf:/opt/adguardhome/conf
    environment:
      - TZ=UTC
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'

  # =============================================================================
  # AI SERVICES
  # =============================================================================
  
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - /mnt/homelab/models/ollama:/root/.ollama
      - /mnt/ramdisk:/tmp/ollama  # Use RAM disk for temporary files
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_MAX_LOADED_MODELS=2
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_MAX_QUEUE=512
    deploy:
      resources:
        limits:
          memory: 20G  # Reserve 20GB for Ollama
          cpus: '8'
        reservations:
          memory: 10G
          cpus: '4'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ollama.rule=Host(`ollama.local`)"
      - "traefik.http.routers.ollama.tls=true"
      - "traefik.http.routers.ollama.tls.certresolver=letsencrypt"
      - "traefik.http.services.ollama.loadbalancer.server.port=11434"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    ports:
      - "3001:8080"
    volumes:
      - /mnt/homelab/docker/volumes/open-webui:/app/backend/data
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - ENABLE_OLLAMA_API=true
      - DEFAULT_MODELS=llama2:7b,mistral:7b,mixtral:8x7b
      - WEBUI_AUTH=false  # For local use
      - ENABLE_SIGNUP=false
      - DEFAULT_USER_ROLE=admin
    depends_on:
      - ollama
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.open-webui.rule=Host(`ai.local`)"
      - "traefik.http.routers.open-webui.tls=true"
      - "traefik.http.routers.open-webui.tls.certresolver=letsencrypt"
      - "traefik.http.services.open-webui.loadbalancer.server.port=8080"

  localai:
    image: localai/localai:latest-aio-cpu
    container_name: localai
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /mnt/homelab/models/localai:/models
    environment:
      - THREADS=8
      - CONTEXT_SIZE=4096
      - MODELS_PATH=/models
      - DEBUG=true
    deploy:
      resources:
        limits:
          memory: 15G
          cpus: '6'
        reservations:
          memory: 8G
          cpus: '3'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.localai.rule=Host(`localai.local`)"
      - "traefik.http.routers.localai.tls=true"
      - "traefik.http.routers.localai.tls.certresolver=letsencrypt"
      - "traefik.http.services.localai.loadbalancer.server.port=8080"

  text-generation-webui:
    image: atinoda/text-generation-webui:default
    container_name: textgen
    restart: unless-stopped
    ports:
      - "7860:7860"
    volumes:
      - /mnt/homelab/models/textgen:/app/models
      - /mnt/homelab/docker/textgen/characters:/app/characters
      - /mnt/homelab/docker/textgen/presets:/app/presets
      - /mnt/homelab/docker/textgen/extensions:/app/extensions
    environment:
      - EXTRA_LAUNCH_ARGS=--listen --verbose --cpu --api --api-blocking-port 5000
    deploy:
      resources:
        limits:
          memory: 12G
          cpus: '6'
        reservations:
          memory: 6G
          cpus: '3'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.textgen.rule=Host(`textgen.local`)"
      - "traefik.http.routers.textgen.tls=true"
      - "traefik.http.routers.textgen.tls.certresolver=letsencrypt"
      - "traefik.http.services.textgen.loadbalancer.server.port=7860"

  # =============================================================================
  # DATABASES
  # =============================================================================
  
  nextcloud-db:
    image: postgres:15-alpine
    container_name: nextcloud-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=nextcloud_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    volumes:
      - /mnt/homelab/docker/volumes/nextcloud-db:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '1'

  nextcloud-redis:
    image: redis:7-alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    command: redis-server --requirepass redis_password
    volumes:
      - /mnt/homelab/docker/volumes/nextcloud-redis:/data
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'

  # =============================================================================
  # FILE SHARING & STORAGE
  # =============================================================================
  
  nextcloud:
    image: nextcloud:27-apache
    container_name: nextcloud
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - /mnt/homelab/docker/volumes/nextcloud:/var/www/html
      - /mnt/homelab/media:/var/www/html/data
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=nextcloud_password
      - POSTGRES_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=redis_password
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=admin_password
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.local
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.local`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  # =============================================================================
  # MEDIA & ENTERTAINMENT
  # =============================================================================
  
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    ports:
      - "8096:8096"
    volumes:
      - /mnt/homelab/docker/volumes/jellyfin:/config
      - /mnt/homelab/media:/media
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.local`)"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  # =============================================================================
  # DEVELOPMENT & TOOLS
  # =============================================================================
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/homelab/docker/volumes/portainer:/data
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.local`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  # =============================================================================
  # MONITORING & OBSERVABILITY
  # =============================================================================
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - /mnt/homelab/docker/volumes/prometheus:/prometheus
      - /mnt/homelab/configs/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.local`)"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - /mnt/homelab/docker/volumes/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.local`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

# =============================================================================
# NETWORKS
# =============================================================================

networks:
  default:
    name: homelab-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =============================================================================
# VOLUMES
# =============================================================================

volumes:
  traefik-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/homelab/docker/volumes/traefik
  
  ollama-models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/homelab/models/ollama
  
  localai-models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/homelab/models/localai
  
  textgen-models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/homelab/models/textgen