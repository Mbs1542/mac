version: '3.8'

networks:
  homelab:
    driver: bridge
  media:
    driver: bridge
  management:
    driver: bridge

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    networks:
      - homelab
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /Volumes/WorkDrive/MacStorage/docker/traefik/config:/etc/traefik:ro
      - /Volumes/WorkDrive/MacStorage/docker/traefik/certificates:/certificates
    environment:
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.mbs-home.ddns.net`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.middlewares=secure-headers@file"

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    networks:
      - homelab
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/homepage/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=Asia/Jerusalem
      - HOMEPAGE_ALLOWED_HOSTS=mbs-home.ddns.net,home.local,dashboard.local,192.168.1.191
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`mbs-home.ddns.net`)"
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.tls.certresolver=letsencrypt"
      - "traefik.http.routers.homepage.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.homepage.service=homepage"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"

  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard
    networks:
      - homelab
      - management
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "853:853/tcp"
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/adguard/work:/opt/adguardhome/work
      - /Volumes/WorkDrive/MacStorage/docker/adguard/conf:/opt/adguardhome/conf
    environment:
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adguard.rule=Host(`dns.mbs-home.ddns.net`)"
      - "traefik.http.routers.adguard.entrypoints=websecure"
      - "traefik.http.routers.adguard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.adguard.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.adguard.service=adguard"
      - "traefik.http.services.adguard.loadbalancer.server.scheme=https"
      - "traefik.http.services.adguard.loadbalancer.server.port=3000"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    networks:
      - homelab
      - management
    # remove direct admin UI port exposure; route via Traefik only
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.mbs-home.ddns.net`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portainer.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    networks:
      - homelab
      - media
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/jellyfin/config:/config
      - /Volumes/WorkDrive/MacStorage/docker/jellyfin/cache:/cache
      - /Volumes/WorkDrive/MacStorage/Media/Movies:/data/movies:ro
      - /Volumes/WorkDrive/MacStorage/Media/Music:/data/music:ro
      - /Volumes/WorkDrive/MacStorage/Media/TV:/data/tvshows:ro
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
      - JELLYFIN_PublishedServerUrl=https://jellyfin.mbs-home.ddns.net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`media.mbs-home.ddns.net`) || Host(`jellyfin.mbs-home.ddns.net`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - "traefik.http.routers.jellyfin.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.jellyfin.service=jellyfin"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - homelab
      - media
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/sonarr/config:/config
      - /Volumes/WorkDrive/MacStorage/Downloads:/downloads
      - /Volumes/WorkDrive/MacStorage/Media/TV:/tv
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.mbs-home.ddns.net`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.sonarr.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      - homelab
      - media
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/radarr/config:/config
      - /Volumes/WorkDrive/MacStorage/Downloads:/downloads
      - /Volumes/WorkDrive/MacStorage/Media/Movies:/movies
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.mbs-home.ddns.net`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.radarr.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    networks:
      - homelab
      - media
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/lidarr/config:/config
      - /Volumes/WorkDrive/MacStorage/Downloads:/downloads
      - /Volumes/WorkDrive/MacStorage/Media/Music:/music
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.mbs-home.ddns.net`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.lidarr.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.lidarr.service=lidarr"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    networks:
      - homelab
      - media
    # no direct UI exposure; route via Traefik
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/bazarr/config:/config
      - /Volumes/WorkDrive/MacStorage/Media/Movies:/movies:ro
      - /Volumes/WorkDrive/MacStorage/Media/TV:/tv:ro
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.mbs-home.ddns.net`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bazarr.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.bazarr.service=bazarr"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    networks:
      - homelab
      - media
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/prowlarr/config:/config
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.mbs-home.ddns.net`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prowlarr.middlewares=authelia@file"
      - "traefik.http.routers.prowlarr.service=prowlarr"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    networks:
      - homelab
      - media
    ports:
      - "51413:51413/tcp"
      - "51413:51413/udp"
    volumes:
      - /Volumes/WorkDrive/MacStorage/Downloads:/downloads
      - /Volumes/WorkDrive/MacStorage/Downloads/watch:/watch
      - /Volumes/WorkDrive/MacStorage/docker/transmission/config:/config
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
      - USER=admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`transmission.mbs-home.ddns.net`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls.certresolver=letsencrypt"
      - "traefik.http.routers.transmission.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.transmission.service=transmission"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"

  slskd:
    image: slskd/slskd:latest
    container_name: slskd
    networks:
      - homelab
      - media
    ports:
      - "50300:50300/tcp"
    volumes:
      - /Volumes/WorkDrive/MacStorage/Media/Music:/music
      - /Volumes/WorkDrive/MacStorage/docker/slskd/config:/app
      - /Volumes/WorkDrive/MacStorage/Downloads/Soulseek:/downloads
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
      - SLSKD_REMOTE_CONFIGURATION=false
      - SLSKD_SHARED_DIR=/music
      - SLSKD_DOWNLOADS_DIR=/downloads
      - SLSKD_HTTP_PORT=5030
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.slskd.rule=Host(`slskd.mbs-home.ddns.net`)"
      - "traefik.http.routers.slskd.entrypoints=websecure"
      - "traefik.http.routers.slskd.tls.certresolver=letsencrypt"
      - "traefik.http.routers.slskd.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.slskd.service=slskd"
      - "traefik.http.services.slskd.loadbalancer.server.port=5030"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    networks:
      - homelab
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/ai-local/open-webui:/app/backend/data
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
      - WEBUI_SECRET_KEY=Mbs212471387!
      - WEBUI_URL=https://ai.mbs-home.ddns.net
      - DATA_DIR=/app/backend/data
      - ENABLE_SIGNUP=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openwebui.rule=Host(`ai.mbs-home.ddns.net`)"
      - "traefik.http.routers.openwebui.entrypoints=websecure"
      - "traefik.http.routers.openwebui.tls.certresolver=letsencrypt"
      - "traefik.http.routers.openwebui.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.openwebui.service=openwebui"
      - "traefik.http.services.openwebui.loadbalancer.server.port=8080"

  wireguard:
    image: weejewel/wg-easy:latest
    container_name: wireguard
    networks:
      - homelab
      - management
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    environment:
      - WG_HOST=mbs-home.ddns.net
      - TZ=Asia/Jerusalem
      - WG_PORT=51820
      - WG_DEFAULT_DNS=192.168.1.191
      - WG_DEFAULT_ADDRESS=10.8.0.x
      - WG_ALLOWED_IPS=10.8.0.0/24,192.168.1.0/24
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/wireguard/config:/etc/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wireguard.rule=Host(`vpn.mbs-home.ddns.net`)"
      - "traefik.http.routers.wireguard.entrypoints=websecure"
      - "traefik.http.routers.wireguard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.wireguard.middlewares=authelia@file"
      - "traefik.http.routers.wireguard.service=wireguard"
      - "traefik.http.services.wireguard.loadbalancer.server.port=51821"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - homelab
      - management
    # no direct UI exposure; route via Traefik
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/prometheus/config:/etc/prometheus
      - /Volumes/WorkDrive/MacStorage/docker/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.mbs-home.ddns.net`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prometheus.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - homelab
      - management
    # no direct UI exposure; route via Traefik
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:?set in .env}
      - TZ=Asia/Jerusalem
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_METRICS_ENABLED=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitor.mbs-home.ddns.net`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.routers.grafana.middlewares=authelia@file,secure-headers@file"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    networks:
      - homelab
      - management
    # no direct UI exposure; route via Traefik
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=Asia/Jerusalem
      - USE_X_FORWARDED_FOR=true
      - TRUSTED_PROXIES=172.20.0.0/16,172.19.0.0/16
    restart: unless-stopped
    privileged: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`home.mbs-home.ddns.net`)"
      - "traefik.http.routers.homeassistant.entrypoints=websecure"
      - "traefik.http.routers.homeassistant.tls.certresolver=letsencrypt"
      - "traefik.http.routers.homeassistant.middlewares=authelia@file"
      - "traefik.http.routers.homeassistant.service=homeassistant"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    networks:
      - homelab
      - management
    # avoid exposing admin/ui port directly; route via Traefik only
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/vaultwarden:/data
    environment:
      - TZ=Asia/Jerusalem
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN:?set in .env}
      - SMTP_HOST=${SMTP_HOST:?set in .env}
      - SMTP_FROM=${SMTP_FROM:?set in .env}
      - SMTP_FROM_NAME=Vaultwarden
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURITY=${SMTP_SECURITY:-starttls}
      - SMTP_USERNAME=${SMTP_USERNAME:?set in .env}
      - SMTP_PASSWORD=${SMTP_PASSWORD:?set in .env}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vault.mbs-home.ddns.net`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=letsencrypt"
      - "traefik.http.routers.vaultwarden.middlewares=secure-headers@file"
      - "traefik.http.routers.vaultwarden.service=vaultwarden"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"

  backup:
    image: alpine:latest
    container_name: backup
    networks:
      - management
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker:/backup/source
      - /Volumes/WorkDrive/MacStorage/Backups:/backup/destination
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=Asia/Jerusalem
      - BACKUP_SCHEDULE=0 2 * * *
      - RETENTION_DAYS=30
    command: |
      sh -c "
      apk add --no-cache rsync docker-cli &&
      while true; do
        echo 'Starting backup at $(date)'
        rsync -av --delete /backup/source/ /backup/destination/$(date +%Y-%m-%d)/
        echo 'Backup completed at $(date)'
        sleep 86400
      done
      "
    restart: unless-stopped

  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: mailserver
    networks:
      - management
    ports:
      - "25:25/tcp"
      - "143:143/tcp"
      - "587:587/tcp"
      - "993:993/tcp"
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/mailserver/data:/var/mail
      - /Volumes/WorkDrive/MacStorage/docker/mailserver/config:/tmp/docker-mailserver
    environment:
      - TZ=Asia/Jerusalem
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=1
      - ENABLE_MANAGESIEVE=1
      - ONE_DIR=1
      - DMS_DEBUG=0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailserver.rule=Host(`mail.mbs-home.ddns.net`)"
      - "traefik.http.routers.mailserver.entrypoints=websecure"
      - "traefik.http.routers.mailserver.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mailserver.middlewares=authelia@file"
      - "traefik.http.routers.mailserver.service=mailserver"
      - "traefik.http.services.mailserver.loadbalancer.server.port=80"

  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    networks:
      - homelab
      - management
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/authelia:/config
    environment:
      - TZ=Asia/Jerusalem
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=Host(`auth.mbs-home.ddns.net`)"
      - "traefik.http.routers.authelia.entrypoints=websecure"
      - "traefik.http.routers.authelia.tls.certresolver=letsencrypt"
      - "traefik.http.routers.authelia.service=authelia"
      - "traefik.http.services.authelia.loadbalancer.server.port=9091"

  cron-reports:
    image: alpine:latest
    container_name: cron-reports
    networks:
      - management
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/scripts:/scripts
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=Asia/Jerusalem
    command: |
      sh -c "
      apk add --no-cache dcron docker-cli &&
      echo '0 8 * * * /scripts/daily-report.sh' | crontab - &&
      crond -f
      "
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    networks:
      - management
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=Asia/Jerusalem
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=false
      - WATCHTOWER_LABEL_ENABLE=true

  nextcloud-db:
    image: postgres:15-alpine
    container_name: nextcloud-db
    networks:
      - homelab
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD:?set in .env}
      - TZ=Asia/Jerusalem
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/nextcloud/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  nextcloud-redis:
    image: redis:7-alpine
    container_name: nextcloud-redis
    networks:
      - homelab
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/nextcloud/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    interval: 30s
    timeout: 10s
    retries: 5
    restart: unless-stopped

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    networks:
      - homelab
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    environment:
      - PUID=501
      - PGID=20
      - TZ=Asia/Jerusalem
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.mbs-home.ddns.net
      - TRUSTED_PROXIES=172.16.0.0/12
      - OVERWRITEPROTOCOL=https
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PORT=6379
      - DB_TYPE=pgsql
      - DB_HOST=nextcloud-db
      - DB_NAME=nextcloud
      - DB_USER=nextcloud
      - DB_PASSWORD=${NEXTCLOUD_DB_PASSWORD:?set in .env}
    volumes:
      - /Volumes/WorkDrive/MacStorage/docker/nextcloud/config:/config
      - /Volumes/WorkDrive/MacStorage/docker/nextcloud/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.mbs-home.ddns.net`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nextcloud.middlewares=secure-headers@file"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.services.nextcloud.loadbalancer.server.scheme=http"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
    restart: unless-stopped
